---
# tasks file for ambariupdates

- name: Make sure Ambari is up
  ansible.builtin.uri:
    url: "https://{{ inventory_hostname }}.vuhl.root.mrc.local:{{ ambari_port }}/#/login"
    method: GET
    validate_certs: false
    status_code: 200
  register: ambari_status
  retries: 30
  delay: 10
  until: ambari_status is success

- name: Get Ambari auth token
  ansible.builtin.uri:
    url: "https://{{ inventory_hostname }}.vuhl.root.mrc.local:{{ ambari_port }}/api/v1/users/admin/privileges"
    method: GET
    validate_certs: false
    status_code: [200, 403]
    headers:
      X-Requested-By: ambari
      Content-Type: application/x-www-form-urlencoded
    url_username: "{{ ambari_admin_username }}"
    url_password: "{{ ambari_admin_password }}"
    force_basic_auth: true
    return_content: true
  register: auth_response

- name: Check ZooKeeper status (should have 3 nodes)
  ansible.builtin.uri:
    url: "https://{{ inventory_hostname }}.vuhl.root.mrc.local:{{ ambari_port }}/api/v1/clusters/{{ cluster_name }}/services/ZOOKEEPER/components/ZOOKEEPER_SERVER?fields=host_components/HostRoles/state,host_components/HostRoles/host_name"
    method: GET
    validate_certs: false
    status_code: [200, 404, 403, 401]
    headers:
      X-Requested-By: ambari
      Content-Type: application/x-www-form-urlencoded
    url_username: "{{ ambari_admin_username }}"
    url_password: "{{ ambari_admin_password }}"
    force_basic_auth: true
    return_content: true
  register: zk_status
  until: >
    zk_status.status == 200 and
    zk_status.content is defined and
    (zk_status.content | from_json).host_components is defined and
    (zk_status.content | from_json).host_components | length == 3 and
    ((zk_status.content | from_json).host_components | map(attribute='HostRoles') | selectattr('state', 'equalto', 'STARTED') | list | length) == 3
  retries: 30
  delay: 10

- name: Debug - Show ZooKeeper evaluation details
  ansible.builtin.debug:
    msg: |
      Status code: {{ zk_status.status }}
      Content defined: {{ zk_status.content is defined }}
      Response: {{ zk_status.content | from_json }}
      Number of components: {{ (zk_status.content | from_json).host_components | length }}
      Started components: {{ ((zk_status.content | from_json).host_components | map(attribute='HostRoles') | selectattr('state', 'equalto', 'STARTED') | list | length) }}
      All states: {{ (zk_status.content | from_json).host_components | map(attribute='HostRoles.state') | list }}
  when: zk_status.status == 200

- name: Check NIFI status (should have 3 nodes)
  ansible.builtin.uri:
    url: "https://{{ inventory_hostname }}.vuhl.root.mrc.local:{{ ambari_port }}/api/v1/clusters/{{ cluster_name }}/services/NIFI/components/NIFI_MASTER?fields=host_components/HostRoles/state,host_components/HostRoles/host_name"
    method: GET
    validate_certs: false
    status_code: [200, 404, 403, 401]
    headers:
      X-Requested-By: ambari
      Content-Type: application/x-www-form-urlencoded
    url_username: "{{ ambari_admin_username }}"
    url_password: "{{ ambari_admin_password }}"
    force_basic_auth: true
    return_content: true
  register: nifi_status
  until: >
    nifi_status.status == 200 and
    nifi_status.content is defined and
    (nifi_status.content | from_json).host_components is defined and
    (nifi_status.content | from_json).host_components | length == 3 and
    ((nifi_status.content | from_json).host_components | map(attribute='HostRoles') | selectattr('state', 'equalto', 'STARTED') | list | length) == 3
  retries: 30
  delay: 10

- name: Debug - Show NiFi evaluation details
  ansible.builtin.debug:
    msg: |
      Status code: {{ nifi_status.status }}
      Content defined: {{ nifi_status.content is defined }}
      Response: {{ nifi_status.content | from_json }}
      Number of components: {{ (nifi_status.content | from_json).host_components | length }}
      Started components: {{ ((nifi_status.content | from_json).host_components | map(attribute='HostRoles') | selectattr('state', 'equalto', 'STARTED') | list | length) }}
      All states: {{ (nifi_status.content | from_json).host_components | map(attribute='HostRoles.state') | list }}
  when: nifi_status.status == 200

  retries: 30
  delay: 10

- name: Check SOLR status (should have 1 node)
  ansible.builtin.uri:
    url: "https://{{ inventory_hostname }}.vuhl.root.mrc.local:{{ ambari_port }}/api/v1/clusters/{{ cluster_name }}/services/AMBARI_INFRA_SOLR/components/INFRA_SOLR?fields=host_components/HostRoles/state,host_components/HostRoles/host_name"
    method: GET
    validate_certs: false
    status_code: [200, 404, 403, 401]
    headers:
      X-Requested-By: ambari
      Content-Type: application/x-www-form-urlencoded
    url_username: "{{ ambari_admin_username }}"
    url_password: "{{ ambari_admin_password }}"
    force_basic_auth: true
    return_content: true
  register: solr_status
  until: >
    solr_status.status == 200 and
    solr_status.content is defined and
    (solr_status.content | from_json).host_components is defined and
    (solr_status.content | from_json).host_components | length == 1 and
    ((solr_status.content | from_json).host_components | map(attribute='HostRoles') | selectattr('state', 'equalto', 'STARTED') | list | length) == 1
  retries: 30
  delay: 10

- name: Debug - Show Solr evaluation details
  ansible.builtin.debug:
    msg: |
      Status code: {{ solr_status.status }}
      Content defined: {{ solr_status.content is defined }}
      Response: {{ solr_status.content | from_json }}
      Number of components: {{ (solr_status.content | from_json).host_components | length }}
      Started components: {{ ((solr_status.content | from_json).host_components | map(attribute='HostRoles') | selectattr('state', 'equalto', 'STARTED') | list | length) }}
      All states: {{ (solr_status.content | from_json).host_components | map(attribute='HostRoles.state') | list }}
  when: solr_status.status == 200

- name: Check RANGER status (should have 1 node)
  ansible.builtin.uri:
    url: "https://{{ inventory_hostname }}.vuhl.root.mrc.local:{{ ambari_port }}/api/v1/clusters/{{ cluster_name }}/services/RANGER/components/RANGER_ADMIN?fields=host_components/HostRoles/state,host_components/HostRoles/host_name"
    method: GET
    validate_certs: false
    status_code: [200, 404, 403, 401]
    headers:
      X-Requested-By: ambari
      Content-Type: application/x-www-form-urlencoded
    url_username: "{{ ambari_admin_username }}"
    url_password: "{{ ambari_admin_password }}"
    force_basic_auth: true
    return_content: true
  register: ranger_status
  until: >
    ranger_status.status == 200 and
    ranger_status.content is defined and
    (ranger_status.content | from_json).host_components is defined and
    (ranger_status.content | from_json).host_components | length == 1 and
    ((ranger_status.content | from_json).host_components | map(attribute='HostRoles') | selectattr('state', 'equalto', 'STARTED') | list | length) == 1
  retries: 30
  delay: 10

- name: Debug - Show Ranger evaluation details
  ansible.builtin.debug:
    msg: |
      Status code: {{ ranger_status.status }}
      Content defined: {{ ranger_status.content is defined }}
      Response: {{ ranger_status.content | from_json }}
      Number of components: {{ (ranger_status.content | from_json).host_components | length }}
      Started components: {{ ((ranger_status.content | from_json).host_components | map(attribute='HostRoles') | selectattr('state', 'equalto', 'STARTED') | list | length) }}
      All states: {{ (ranger_status.content | from_json).host_components | map(attribute='HostRoles.state') | list }}
  when: ranger_status.status == 200

- name: Check NIFI REGISTRY status (should have 1 node)
  when: not ('DEV' in cluster_name | upper)
  ansible.builtin.uri:
    url: "https://{{ inventory_hostname }}.vuhl.root.mrc.local:{{ ambari_port }}/api/v1/clusters/{{ cluster_name }}/services/NIFI_REGISTRY/components/NIFI_REGISTRY_MASTER?fields=host_components/HostRoles/state,host_components/HostRoles/host_name"
    method: GET
    validate_certs: false
    status_code: [200, 404, 403, 401]
    headers:
      X-Requested-By: ambari
      Content-Type: application/x-www-form-urlencoded
    url_username: "{{ ambari_admin_username }}"
    url_password: "{{ ambari_admin_password }}"
    force_basic_auth: true
    return_content: true
  register: registry_status
  until: >
    registry_status.status == 200 and
    registry_status.content is defined and
    (registry_status.content | from_json).host_components is defined and
    (registry_status.content | from_json).host_components | length == 1 and
    ((registry_status.content | from_json).host_components | map(attribute='HostRoles') | selectattr('state', 'equalto', 'STARTED') | list | length) == 1
  retries: 30
  delay: 10

- name: Debug - Show NiFi Registry evaluation details
  when: not ('DEV' in cluster_name | upper) and registry_status.status == 200
  ansible.builtin.debug:
    msg: |
      Status code: {{ registry_status.status }}
      Content defined: {{ registry_status.content is defined }}
      Response: {{ registry_status.content | from_json }}
      Number of components: {{ (registry_status.content | from_json).host_components | length }}
      Started components: {{ ((registry_status.content | from_json).host_components | map(attribute='HostRoles') | selectattr('state', 'equalto', 'STARTED') | list | length) }}
      All states: {{ (registry_status.content | from_json).host_components | map(attribute='HostRoles.state') | list }}
